package lab.cgcl.requestClient;

import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import lab.cgcl.dao.DbcpPool;
import lab.cgcl.dao.SqlDao;
import lab.cgcl.dao.SqlDaoImpl;
import lab.cgcl.myOCR.MyOCR;
import lab.cgcl.myOCR.util.JsonUtil;
import lab.cgcl.myOCR.util.RandomChar;
import lab.cgcl.myOCR.util.Utility;

import org.apache.http.Consts;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.cookie.Cookie;
import org.apache.http.impl.client.BasicCookieStore;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;

public class ClientRegister {
	private SqlDao dao;
	public SqlDao getDao() {
		return dao;
	}

	public void setDao(SqlDao dao) {
		this.dao = dao;
	}

	public static void main(String[] args) {
		ClientRegister cli = new ClientRegister( new SqlDaoImpl(new DbcpPool().getDataSource()));
		cli.reg();
	}
	
	public ClientRegister(SqlDao dao) {
		this.dao = dao; 
	}
	
	private String username = "";
	private String password = "";
	
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public  void reg() {
		BasicCookieStore cookieStore = new BasicCookieStore();
        CloseableHttpClient httpclient = HttpClients.custom().setDefaultCookieStore(cookieStore).build();
        String baseUri = "http://www.canda.cn/";
        
        try {
		        // get reg page
        	HttpGet httpget = new HttpGet("http://www.canda.cn/MemberRegister.aspx");
            CloseableHttpResponse response1 = httpclient.execute(httpget);
            String validCodeSrc = "";
                        
	        try {
	            InputStream is = response1.getEntity().getContent();
	            Document doc  = Jsoup.parse(is, "UTF-8", baseUri);
	            
	            /*
	             * test saving in file
	             */
//	            File file = new File("e:/a.txt");
//	            FileOutputStream out = new FileOutputStream(file);
//	            out.write(doc.toString().getBytes());
	            
	            Element element = doc.getElementById("imgValiCode");
	        	if (element != null) {
	            	String imgUrl = element.attr("src");
	            	validCodeSrc = baseUri + imgUrl;
	            	//System.out.println("valid code src : "+ validCodeSrc);
	        	}
	        	
//	        	List<Cookie> cookies = cookieStore.getCookies();
//	            if (cookies.isEmpty()) {
//	                System.out.println("None");
//	            } else {
//	                for (int i = 0; i < cookies.size(); i++) {
//	                    System.out.println("- " + cookies.get(i).toString());
//	                }
//	            }
	            
	        } catch (Exception e) {
	        	e.printStackTrace();
	        } finally {
                response1.close();
            }
	        HttpGet getValidCode = new HttpGet(validCodeSrc);
	        CloseableHttpResponse validCodeRes = httpclient.execute(getValidCode);
	        byte[] imgByte = EntityUtils.toByteArray(validCodeRes.getEntity());
	        BufferedImage img = Utility.Byte2BufferedImage(imgByte);
	        
	        String validCode = MyOCR.processByTrain(img);
	        //post form 
	        HttpPost httpost = new HttpPost("http://www.canda.cn/Utility/CAndAHandler.ashx");
	        List <NameValuePair> nvps = new ArrayList <NameValuePair>();
	        nvps.add(new BasicNameValuePair("action", "MEMBERREGISTER"));
	        String email =  new String(RandomChar.Random(8)) + "@163.com";
	        nvps.add(new BasicNameValuePair("email",email));
	        System.out.println("email : " + email);
	        String passwd = new String(RandomChar.Random(8));
	        nvps.add(new BasicNameValuePair("password", passwd));
	        System.out.println("password : " +passwd);
	        nvps.add(new BasicNameValuePair("valiateCode", validCode ));
	
	        httpost.setEntity(new UrlEncodedFormEntity(nvps, Consts.UTF_8));
	        CloseableHttpResponse response2 = httpclient.execute(httpost);
	        if (response2.getStatusLine().getStatusCode() != 200) {
	        	// fail to connect server 
	        	System.out.println("error while post reg form , statusline : " + response2.getStatusLine());
	        	return ;
	        }
	        try {
                InputStream is2 =  response2.getEntity().getContent();
                byte[] buffer = new byte[512];
                is2.read(buffer);
                if ( "-1".equals(JsonUtil.jsonUtil(new String(buffer , "UTF-8") , "ID"))) {
                	System.out.println(JsonUtil.jsonUtil(new String(buffer , "UTF-8") , "DES"));
                } else if ("1".equals(JsonUtil.jsonUtil(new String(buffer , "UTF-8") , "ID"))) {
                	//success
                	System.out.println(JsonUtil.jsonUtil(new String(buffer , "UTF-8") , "DES"));
                	this.password = passwd;
                	this.username = email;
                	save();
                } else {
                	System.out.println(new String(buffer , "UTF-8") );
                }
	        } catch (Exception e) {
	        	e.printStackTrace();
	        } finally {
	        	response2.close();
	        }
		} catch (Exception e) {
			
			e.printStackTrace();
		} finally {
	        try {
				httpclient.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	    }
	}
	
	
	public void save() throws Exception { 
		String sql = "insert into CAuser.user (username , pwd  ,regDate ) values ( '" + this.username + "' , '" +this.password
				+ "' , (select now()) );";
		dao.insert(sql);
		System.out.println("reg user and save in db : " + username);
	}
	
	

}
