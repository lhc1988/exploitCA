package lab.cgcl.requestClient;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import lab.cgcl.myOCR.util.JsonUtil;
import lab.cgcl.myOCR.util.RandomChar;

import org.apache.http.Consts;
import org.apache.http.HttpEntity;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.cookie.Cookie;
import org.apache.http.impl.client.BasicCookieStore;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;

/**
 * A example that demonstrates how HttpClient APIs can be used to perform
 * form-based logon.
 */
public class ClientFormLogin {
	
	private String username = "ssss@163.com";

    public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public static void main(String[] args) throws Exception {
        BasicCookieStore cookieStore = new BasicCookieStore();
        CloseableHttpClient httpclient = HttpClients.custom().setDefaultCookieStore(cookieStore).build();
        ClientFormLogin clf = new ClientFormLogin();
        int failureCount = 0 ; 
        final int MaxFailure = 20;
        try {
        	while (!clf.getLoginPage(httpclient ,cookieStore)) {
        		if ( ++ failureCount == MaxFailure ) 
        			return ;
        	}
        	while (!clf.loginAction(httpclient , cookieStore)){
        		if ( ++ failureCount == MaxFailure ) 
        			return ;
        	}
        	while (!clf.memberImproveAction(httpclient)){
        		if ( ++ failureCount == MaxFailure ) 
        			return ;
        	}
        	
        	//earn 400 point
        	int pointCount = 0 ;
        	do {
        		if (clf.earnPointAction(httpclient)) {
        			pointCount ++ ;
        		}
        	}while (pointCount ==10);
        } finally {
            httpclient.close();
        }
    }
    
    public boolean getLoginPage (CloseableHttpClient httpclient , BasicCookieStore cookieStore) throws ClientProtocolException, IOException {
    	boolean flag = false;
    	
    	HttpGet httpget = new HttpGet("http://www.canda.cn/memberlogin.aspx");

        CloseableHttpResponse response1 = httpclient.execute(httpget);
        try {
            HttpEntity entity = response1.getEntity();

            System.out.println("Login form get: " + response1.getStatusLine());
            EntityUtils.consume(entity);

            System.out.println("Initial set of cookies:");
            List<Cookie> cookies = cookieStore.getCookies();
            if (cookies.isEmpty()) {
                System.out.println("None");
            } else {
                for (int i = 0; i < cookies.size(); i++) {
                    System.out.println("- " + cookies.get(i).toString());
                }
            }
            flag = true;
        } catch (Exception e) {
        	e.printStackTrace();
        } finally {
            response1.close();
        }
        return flag;
    }
    
    public boolean loginAction (CloseableHttpClient httpclient , BasicCookieStore cookieStore) throws ClientProtocolException, IOException {
    	boolean flag = false;
    	HttpPost httpost = new HttpPost("http://www.canda.cn/Utility/CAndAHandler.ashx");
        List <NameValuePair> nvps = new ArrayList <NameValuePair>();
        nvps.add(new BasicNameValuePair("action", "MEMBERLOGIN"));
        nvps.add(new BasicNameValuePair("password", "123456"));
        nvps.add(new BasicNameValuePair("remember", "1"));
        nvps.add(new BasicNameValuePair("username", username));

        httpost.setEntity(new UrlEncodedFormEntity(nvps, Consts.UTF_8));

        CloseableHttpResponse response2 = httpclient.execute(httpost);
        try {
            HttpEntity entity = response2.getEntity();

            System.out.println("Login form get: " + response2.getStatusLine());
            
            InputStream is = entity.getContent();
            byte[] buffer = new byte[512];
            is.read(buffer);
            //String s = new String(buffer, "UTF-8");
            //System.out.println("Login form response: " +s );
            if ( "1".equals(JsonUtil.jsonUtil(new String(buffer , "UTF-8") , "ID"))) {
            	System.out.println( "login action response : " +
            			JsonUtil.jsonUtil(new String(buffer , "UTF-8") , "DES"));
            	EntityUtils.consume(entity);

                System.out.println("Post logon cookies:");
                List<Cookie> cookies = cookieStore.getCookies();
                if (cookies.isEmpty()) {
                    System.out.println("None");
                } else {
                    for (int i = 0; i < cookies.size(); i++) {
                        System.out.println("- " + cookies.get(i).toString());
                    }
                }
                flag = true;
            } else {
            	System.out.println("Login form response: " +new String(buffer, "UTF-8") );
            }
            
        } catch (Exception e) {
        	e.printStackTrace();
        } finally {
            response2.close();
        }
        return flag;
    }
    
    public boolean earnPointAction (CloseableHttpClient httpclient) throws ClientProtocolException, IOException {
    	boolean flag = false;
    	HttpPost earnPoingPost = new HttpPost("http://www.canda.cn/Utility/CAndAHandler.ashx");
        List <NameValuePair> nvps1 = new ArrayList <NameValuePair>();
        nvps1.add(new BasicNameValuePair("action", "EARNPOINT"));
        nvps1.add(new BasicNameValuePair("pid", "QQShare"));
        nvps1.add(new BasicNameValuePair("tid", "9"));
        earnPoingPost.setEntity(new UrlEncodedFormEntity(nvps1, Consts.UTF_8));
        CloseableHttpResponse response3 = httpclient.execute(earnPoingPost);
      
        try {
            InputStream is = response3.getEntity().getContent();
            byte[] buffer = new byte[512];
            is.read(buffer);
            if ( "1".equals(JsonUtil.jsonUtil(new String(buffer , "UTF-8") , "ID"))) {
            	System.out.println( "earn point action response : " +
            			JsonUtil.jsonUtil(new String(buffer , "UTF-8") , "DES"));
            	flag = true;
            }	else {
            	System.out.println("earn point action response: " +new String(buffer, "UTF-8") );
            }
            
        } catch (Exception e) {
        	e.printStackTrace();
        } finally {
            response3.close();
        }
        return flag;
    }
    
    public boolean memberImproveAction (CloseableHttpClient httpclient) throws Exception {
    	boolean flag = false;
    	HttpPost httpPost = new HttpPost("http://www.canda.cn/Utility/CAndAHandler.ashx");
        List <NameValuePair> nvps1 = new ArrayList <NameValuePair>();
        nvps1.add(new BasicNameValuePair("action", "MEMBERIMPROVE"));
        nvps1.add(new BasicNameValuePair("address", ""));
        nvps1.add(new BasicNameValuePair("avatarUrl", ""));
        nvps1.add(new BasicNameValuePair("birthday", ""));
        nvps1.add(new BasicNameValuePair("city", "63"));
        nvps1.add(new BasicNameValuePair("mobile",RandomChar.RandomMoblieNo() ));
        nvps1.add(new BasicNameValuePair("province", "6"));
        nvps1.add(new BasicNameValuePair("qq", ""));
        nvps1.add(new BasicNameValuePair("sex", "1"));
        nvps1.add(new BasicNameValuePair("username", username));
        nvps1.add(new BasicNameValuePair("weibo", ""));
        httpPost.setEntity(new UrlEncodedFormEntity(nvps1, Consts.UTF_8));
        CloseableHttpResponse response3 = httpclient.execute(httpPost);
      
        try {
            InputStream is = response3.getEntity().getContent();
            byte[] buffer = new byte[512];
            is.read(buffer);
            if ( "1".equals(JsonUtil.jsonUtil(new String(buffer , "UTF-8") , "ID"))) {
            	System.out.println( "member improve action response : " +
            			JsonUtil.jsonUtil(new String(buffer , "UTF-8") , "DES"));
            	flag =  true;
            }	else {
            	System.out.println("member improve action response: " +new String(buffer, "UTF-8") );
            }
            
        } catch (Exception e) {
        	e.printStackTrace();
        } finally {
            response3.close();
        }
        return flag;
    }
}
